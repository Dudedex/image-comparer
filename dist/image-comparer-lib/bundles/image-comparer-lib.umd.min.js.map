{"version":3,"sources":["ng://image-comparer-lib/lib/image-comparer-lib.service.ts","ng://image-comparer-lib/lib/image-comparer-lib.component.ts","ng://image-comparer-lib/lib/image-cropper/image-cropper.component.ts","ng://image-comparer-lib/lib/classes/image-details.ts","ng://image-comparer-lib/lib/image-container-panel/image-container-panel.component.ts","ng://image-comparer-lib/lib/image-loading-form/image-loading-form.component.ts","ng://image-comparer-lib/lib/image-comparer-lib.module.ts"],"names":["ImageComparerLibService","Injectable","args","providedIn","ImageComparerLibComponent","prototype","ngOnInit","Component","selector","template","ImageCropperComponent","this","imageChangedEvent","clickUpload","uploadButton","nativeElement","click","fileChangeEvent","event","imageCropped","image","base64","console","log","imageLoaded","showCropper","cropperReady","loadImageFailed","rotateLeft","imageCropper","rotateRight","flipHorizontal","flipVertical","ViewChild","Input","ImageDetails","ImageContainerPanelComponent","initWidth","leftImage","type","rightImage","ngOnChanges","changes","mainFramWidth","$","width","leftContainerWidth","rightContainerWidth","onResizeEnd","edges","right","getMarginTop","format","leftContainerHeight","ImageLoadingFormComponent","formatX","formatY","imageChanged","EventEmitter","emit","saveFormat","Output","ImageComparerLibModule","NgModule","declarations","imports","BrowserModule","ResizableModule","FormsModule","ImageCropperModule","providers","ResizableDirective","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageComparerLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-image-comparer-lib',\n  template: `\n    <app-image-container-panel></app-image-container-panel>\n  `,\n  styles: []\n})\nexport class ImageComparerLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {ImageDetails} from '../classes/image-details';\nimport {ImageCroppedEvent} from 'ngx-image-cropper';\n\n@Component({\n  selector: 'app-image-cropper',\n  templateUrl: './image-cropper.component.html',\n  styleUrls: ['./image-cropper.component.css']\n})\nexport class ImageCropperComponent implements OnInit {\n\n  public imageChangedEvent: any = '';\n  public showCropper;\n\n  @ViewChild('cropper') imageCropper: ImageCropperComponent;\n\n  @ViewChild('upload') uploadButton: ElementRef;\n\n  @Input()\n  public image: ImageDetails;\n\n  @Input()\n  public format: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  public clickUpload() {\n    this.uploadButton.nativeElement.click();\n  }\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n  }\n\n  imageCropped(event: ImageCroppedEvent) {\n    this.image.image = event.base64;\n    console.log(event);\n  }\n\n  imageLoaded() {\n    this.showCropper = true;\n  }\n\n  cropperReady() {\n  }\n\n  loadImageFailed() {\n  }\n\n  rotateLeft() {\n    this.imageCropper.rotateLeft();\n  }\n\n  rotateRight() {\n    this.imageCropper.rotateRight();\n  }\n\n  flipHorizontal() {\n    this.imageCropper.flipHorizontal();\n  }\n\n  flipVertical() {\n    this.imageCropper.flipVertical();\n  }\n\n}\n","export class ImageDetails {\r\n  public image: any;\r\n  public format: number;\r\n  public type: string;\r\n}\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {ImageDetails} from '../classes/image-details';\n\n@Component({\n  selector: 'app-image-container-panel',\n  templateUrl: './image-container-panel.component.html',\n  styleUrls: ['./image-container-panel.component.css']\n})\nexport class ImageContainerPanelComponent implements OnInit, OnChanges {\n  public mainFramWidth;\n  public leftContainerWidth;\n  public rightContainerWidth;\n  public leftImage: ImageDetails;\n  public rightImage: ImageDetails;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.initWidth();\n    this.leftImage = new ImageDetails();\n    this.leftImage.type = 'left';\n    this.rightImage = new ImageDetails();\n    this.rightImage.type = 'right';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n\n  public initWidth() {\n    this.mainFramWidth = $('#main-frame').width();\n    this.leftContainerWidth = this.mainFramWidth / 2 - 2;\n    this.rightContainerWidth = this.mainFramWidth;\n  }\n\n  public onResizeEnd(event: any) {\n    this.leftContainerWidth = this.leftContainerWidth + event.edges.right - 2;\n  }\n\n  public getMarginTop() {\n    if (this.leftImage && this.leftImage.format) {\n      return (800 / this.leftImage.format) - 20;\n    }\n    return 0;\n  }\n\n  public leftContainerHeight() {\n    return (800 / this.leftImage.format) + 30;\n  }\n\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {ImageDetails} from '../classes/image-details';\n\n@Component({\n  selector: 'app-image-loading-form',\n  templateUrl: './image-loading-form.component.html',\n  styleUrls: ['./image-loading-form.component.css']\n})\nexport class ImageLoadingFormComponent implements OnInit, OnChanges {\n\n  public formatX = 16;\n  public formatY = 9;\n\n  @Output()\n  public imageChanged = new EventEmitter();\n\n  @Input()\n  public leftImage: ImageDetails;\n\n  @Input()\n  public rightImage: ImageDetails;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.imageChanged.emit();\n    this.saveFormat();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.imageChanged.emit();\n  }\n\n  public saveFormat() {\n    this.leftImage.format = this.formatX / this.formatY;\n    this.rightImage.format = this.formatX / this.formatY;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ImageComparerLibComponent } from './image-comparer-lib.component';\nimport {FormsModule} from '@angular/forms';\nimport {ImageCropperModule} from 'ngx-image-cropper';\nimport {ResizableDirective, ResizableModule} from 'angular-resizable-element';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {ImageCropperComponent} from './image-cropper/image-cropper.component';\nimport {ImageContainerPanelComponent} from './image-container-panel/image-container-panel.component';\nimport {ImageLoadingFormComponent} from './image-loading-form/image-loading-form.component';\nimport * as $ from 'jquery';\n\n@NgModule({\n  declarations: [\n    ImageComparerLibComponent,\n    ImageCropperComponent,\n    ImageContainerPanelComponent,\n    ImageLoadingFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    ResizableModule,\n    FormsModule,\n    ImageCropperModule\n  ],\n  providers: [\n    ResizableDirective\n  ],\n  exports: [ImageComparerLibComponent]\n})\nexport class ImageComparerLibModule { }\n"]}