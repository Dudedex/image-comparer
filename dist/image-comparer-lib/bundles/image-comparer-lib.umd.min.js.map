{"version":3,"sources":["ng://image-comparer-lib/lib/image-comparer-lib.service.ts","ng://image-comparer-lib/lib/image-comparer-lib.component.ts","ng://image-comparer-lib/lib/image-cropper/image-cropper.component.ts","ng://image-comparer-lib/lib/classes/image-details.ts","ng://image-comparer-lib/lib/image-container-panel/image-container-panel.component.ts","ng://image-comparer-lib/lib/image-loading-form/image-loading-form.component.ts","ng://image-comparer-lib/lib/image-comparer-lib.module.ts"],"names":["ImageComparerLibService","Injectable","args","providedIn","ImageComparerLibComponent","prototype","ngOnInit","Component","selector","template","ImageCropperComponent","this","imageChangedEvent","imageChanged","EventEmitter","clickUpload","uploadButton","nativeElement","click","fileChangeEvent","event","imageCropped","image","base64","emit","imageLoaded","showCropper","cropperReady","loadImageFailed","rotateLeft","imageCropper","rotateRight","flipHorizontal","flipVertical","ViewChild","Input","Output","ImageDetails","ImageContainerPanelComponent","initWidth","leftImage","type","rightImage","ngOnChanges","changes","mainFramWidth","$","width","leftContainerWidth","rightContainerWidth","height","isNaN","leftContainerHeight","handleMargin","onResizeEnd","edges","right","ImageLoadingFormComponent","formatX","formatY","saveFormat","format","ImageComparerLibModule","NgModule","declarations","imports","BrowserModule","ResizableModule","FormsModule","ImageCropperModule","providers","ResizableDirective","exports"],"mappings":"okBAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAWE,SAAAA,KAKF,OAHEA,EAAAC,UAAAC,SAAA,iCAXDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,yBACVC,SAAU,8GAYZL,EAhBA,GCAAM,EAAA,WA2BE,SAAAA,IAhBOC,KAAAC,kBAAyB,GAczBD,KAAAE,aAAe,IAAIC,EAAAA,aA+C5B,OA1CEJ,EAAAL,UAAAC,SAAA,aAGOI,EAAAL,UAAAU,YAAP,WACEJ,KAAKK,aAAaC,cAAcC,SAGlCR,EAAAL,UAAAc,gBAAA,SAAgBC,GACdT,KAAKC,kBAAoBQ,GAG3BV,EAAAL,UAAAgB,aAAA,SAAaD,GACXT,KAAKW,MAAMA,MAAQF,EAAMG,OACzBZ,KAAKE,aAAaW,QAGpBd,EAAAL,UAAAoB,YAAA,WACEd,KAAKe,aAAc,GAGrBhB,EAAAL,UAAAsB,aAAA,aAGAjB,EAAAL,UAAAuB,gBAAA,aAGAlB,EAAAL,UAAAwB,WAAA,WACElB,KAAKmB,aAAaD,cAGpBnB,EAAAL,UAAA0B,YAAA,WACEpB,KAAKmB,aAAaC,eAGpBrB,EAAAL,UAAA2B,eAAA,WACErB,KAAKmB,aAAaE,kBAGpBtB,EAAAL,UAAA4B,aAAA,WACEtB,KAAKmB,aAAaG,oCAjErB1B,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,oBACVC,SAAA,y5CAQCyB,EAAAA,UAAShC,KAAA,CAAC,iCAEVgC,EAAAA,UAAShC,KAAA,CAAC,yBAEViC,EAAAA,sBAGAA,EAAAA,4BAGAC,EAAAA,UAgDH1B,EAxEA,GCAA2B,EAAA,SAAAA,MCAAC,EAAA,WAiBE,SAAAA,KA+BF,OA7BEA,EAAAjC,UAAAC,SAAA,WACEK,KAAK4B,YACL5B,KAAK6B,UAAY,IAAIH,EACrB1B,KAAK6B,UAAUC,KAAO,OACtB9B,KAAK+B,WAAa,IAAIL,EACtB1B,KAAK+B,WAAWD,KAAO,SAGzBH,EAAAjC,UAAAsC,YAAA,SAAYC,KAGLN,EAAAjC,UAAAkC,UAAP,WACE5B,KAAKkC,cAAgBC,EAAE,eAAeC,QACtCpC,KAAKqC,mBAAqBrC,KAAKkC,cAAgB,EAAI,EACnDlC,KAAKsC,oBAAsBtC,KAAKkC,kBAC5BK,EAAUJ,EAAE,oBAAoBI,SAAY,GAOhD,OANIC,MAAMD,KACRA,EAAUJ,EAAE,qBAAqBI,SAAY,IAE/CvC,KAAKyC,oBAAsBF,EAC3BvC,KAAK0C,aAAe1C,KAAKyC,oBAAsB,IAExC,GAGFd,EAAAjC,UAAAiD,YAAP,SAAmBlC,GACjBT,KAAKqC,mBAAqBrC,KAAKqC,mBAAqB5B,EAAMmC,MAAMC,MAAQ,uBA1C3EjD,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,4BACVC,SAAA,05EA2CF6B,EAhDA,GCAAmB,EAAA,WAsBE,SAAAA,IAZO9C,KAAA+C,QAAU,GACV/C,KAAAgD,QAAU,EAGVhD,KAAAE,aAAe,IAAIC,EAAAA,aAwB5B,OAbE2C,EAAApD,UAAAC,SAAA,WACEK,KAAKE,aAAaW,OAClBb,KAAKiD,cAGPH,EAAApD,UAAAsC,YAAA,SAAYC,GACVjC,KAAKE,aAAaW,QAGbiC,EAAApD,UAAAuD,WAAP,WACEjD,KAAK6B,UAAUqB,OAASlD,KAAK+C,QAAU/C,KAAKgD,QAC5ChD,KAAK+B,WAAWmB,OAASlD,KAAK+C,QAAU/C,KAAKgD,6BAjChDpD,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,yBACVC,SAAA,m2BAQC2B,EAAAA,0BAGAD,EAAAA,0BAGAA,EAAAA,SAmBHsB,EAtCA,GCAAK,EAAA,WAWA,SAAAA,KAkBsC,2BAlBrCC,EAAAA,SAAQ7D,KAAA,CAAC,CACR8D,aAAc,CACZ5D,EACAM,EACA4B,EACAmB,GAEFQ,QAAS,CACPC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,YACAC,EAAAA,oBAEFC,UAAW,CACTC,EAAAA,oBAEFC,QAAS,CAACpE,OAE0B0D,EA7BtC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageComparerLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-image-comparer-lib',\n  template: `\n    <app-image-container-panel></app-image-container-panel>\n  `,\n  styles: []\n})\nexport class ImageComparerLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {ImageDetails} from '../classes/image-details';\nimport {ImageCroppedEvent} from 'ngx-image-cropper';\n\n@Component({\n  selector: 'app-image-cropper',\n  templateUrl: './image-cropper.component.html',\n  styleUrls: ['./image-cropper.component.css']\n})\nexport class ImageCropperComponent implements OnInit {\n\n  public imageChangedEvent: any = '';\n  public showCropper;\n\n  @ViewChild('cropper') imageCropper: ImageCropperComponent;\n\n  @ViewChild('upload') uploadButton: ElementRef;\n\n  @Input()\n  public image: ImageDetails;\n\n  @Input()\n  public format: number;\n\n  @Output()\n  public imageChanged = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  public clickUpload() {\n    this.uploadButton.nativeElement.click();\n  }\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n  }\n\n  imageCropped(event: ImageCroppedEvent) {\n    this.image.image = event.base64;\n    this.imageChanged.emit();\n  }\n\n  imageLoaded() {\n    this.showCropper = true;\n  }\n\n  cropperReady() {\n  }\n\n  loadImageFailed() {\n  }\n\n  rotateLeft() {\n    this.imageCropper.rotateLeft();\n  }\n\n  rotateRight() {\n    this.imageCropper.rotateRight();\n  }\n\n  flipHorizontal() {\n    this.imageCropper.flipHorizontal();\n  }\n\n  flipVertical() {\n    this.imageCropper.flipVertical();\n  }\n\n}\n","export class ImageDetails {\r\n  public image: any;\r\n  public format: number;\r\n  public type: string;\r\n}\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {ImageDetails} from '../classes/image-details';\n\n@Component({\n  selector: 'app-image-container-panel',\n  templateUrl: './image-container-panel.component.html',\n  styleUrls: ['./image-container-panel.component.css']\n})\nexport class ImageContainerPanelComponent implements OnInit, OnChanges {\n  public mainFramWidth;\n  public leftContainerWidth;\n  public rightContainerWidth;\n  public leftContainerHeight;\n  public handleMargin;\n  public leftImage: ImageDetails;\n  public rightImage: ImageDetails;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.initWidth();\n    this.leftImage = new ImageDetails();\n    this.leftImage.type = 'left';\n    this.rightImage = new ImageDetails();\n    this.rightImage.type = 'right';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n\n  public initWidth() {\n    this.mainFramWidth = $('#main-frame').width();\n    this.leftContainerWidth = this.mainFramWidth / 2 - 2;\n    this.rightContainerWidth = this.mainFramWidth;\n    let height = ($('#left-picture-id').height()) + 50;\n    if (isNaN(height)) {\n      height = ($('#right-picture-id').height()) + 50;\n    }\n    this.leftContainerHeight = height;\n    this.handleMargin = this.leftContainerHeight - 50;\n\n    return true;\n  }\n\n  public onResizeEnd(event: any) {\n    this.leftContainerWidth = this.leftContainerWidth + event.edges.right - 2;\n  }\n\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {ImageDetails} from '../classes/image-details';\n\n@Component({\n  selector: 'app-image-loading-form',\n  templateUrl: './image-loading-form.component.html',\n  styleUrls: ['./image-loading-form.component.css']\n})\nexport class ImageLoadingFormComponent implements OnInit, OnChanges {\n\n  public formatX = 16;\n  public formatY = 9;\n\n  @Output()\n  public imageChanged = new EventEmitter();\n\n  @Input()\n  public leftImage: ImageDetails;\n\n  @Input()\n  public rightImage: ImageDetails;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.imageChanged.emit();\n    this.saveFormat();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.imageChanged.emit();\n  }\n\n  public saveFormat() {\n    this.leftImage.format = this.formatX / this.formatY;\n    this.rightImage.format = this.formatX / this.formatY;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ImageComparerLibComponent } from './image-comparer-lib.component';\nimport {FormsModule} from '@angular/forms';\nimport {ImageCropperModule} from 'ngx-image-cropper';\nimport {ResizableDirective, ResizableModule} from 'angular-resizable-element';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {ImageCropperComponent} from './image-cropper/image-cropper.component';\nimport {ImageContainerPanelComponent} from './image-container-panel/image-container-panel.component';\nimport {ImageLoadingFormComponent} from './image-loading-form/image-loading-form.component';\nimport * as $ from 'jquery';\n\n@NgModule({\n  declarations: [\n    ImageComparerLibComponent,\n    ImageCropperComponent,\n    ImageContainerPanelComponent,\n    ImageLoadingFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    ResizableModule,\n    FormsModule,\n    ImageCropperModule\n  ],\n  providers: [\n    ResizableDirective\n  ],\n  exports: [ImageComparerLibComponent]\n})\nexport class ImageComparerLibModule { }\n"]}