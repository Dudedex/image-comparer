{"version":3,"file":"image-comparer-lib.umd.js.map","sources":["ng://image-comparer-lib/lib/image-comparer-lib.service.ts","ng://image-comparer-lib/lib/image-comparer-lib.component.ts","ng://image-comparer-lib/lib/image-cropper/image-cropper.component.ts","ng://image-comparer-lib/lib/classes/image-details.ts","ng://image-comparer-lib/lib/image-container-panel/image-container-panel.component.ts","ng://image-comparer-lib/lib/image-loading-form/image-loading-form.component.ts","ng://image-comparer-lib/lib/image-comparer-lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageComparerLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-image-comparer-lib',\n  template: `\n    <app-image-container-panel></app-image-container-panel>\n  `,\n  styles: []\n})\nexport class ImageComparerLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {ImageDetails} from '../classes/image-details';\nimport {ImageCroppedEvent} from 'ngx-image-cropper';\n\n@Component({\n  selector: 'app-image-cropper',\n  templateUrl: './image-cropper.component.html',\n  styleUrls: ['./image-cropper.component.css']\n})\nexport class ImageCropperComponent implements OnInit {\n\n  public imageChangedEvent: any = '';\n  public showCropper;\n\n  @ViewChild('cropper') imageCropper: ImageCropperComponent;\n\n  @ViewChild('upload') uploadButton: ElementRef;\n\n  @Input()\n  public image: ImageDetails;\n\n  @Input()\n  public format: number;\n\n  @Output()\n  public imageChanged = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  public clickUpload() {\n    this.uploadButton.nativeElement.click();\n  }\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n  }\n\n  imageCropped(event: ImageCroppedEvent) {\n    this.image.image = event.base64;\n    this.imageChanged.emit();\n  }\n\n  imageLoaded() {\n    this.showCropper = true;\n  }\n\n  cropperReady() {\n  }\n\n  loadImageFailed() {\n  }\n\n  rotateLeft() {\n    this.imageCropper.rotateLeft();\n  }\n\n  rotateRight() {\n    this.imageCropper.rotateRight();\n  }\n\n  flipHorizontal() {\n    this.imageCropper.flipHorizontal();\n  }\n\n  flipVertical() {\n    this.imageCropper.flipVertical();\n  }\n\n}\n","export class ImageDetails {\r\n  public image: any;\r\n  public format: number;\r\n  public type: string;\r\n}\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {ImageDetails} from '../classes/image-details';\n\n@Component({\n  selector: 'app-image-container-panel',\n  templateUrl: './image-container-panel.component.html',\n  styleUrls: ['./image-container-panel.component.css']\n})\nexport class ImageContainerPanelComponent implements OnInit, OnChanges {\n  public mainFramWidth;\n  public leftContainerWidth;\n  public rightContainerWidth;\n  public leftContainerHeight;\n  public handleMargin;\n  public leftImage: ImageDetails;\n  public rightImage: ImageDetails;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.initWidth();\n    this.leftImage = new ImageDetails();\n    this.leftImage.type = 'left';\n    this.rightImage = new ImageDetails();\n    this.rightImage.type = 'right';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n\n  public initWidth() {\n    this.mainFramWidth = $('#main-frame').width();\n    this.leftContainerWidth = this.mainFramWidth / 2 - 2;\n    this.rightContainerWidth = this.mainFramWidth;\n    this.leftContainerHeight = ($('#left-picture-id').height()) + 50;\n    this.handleMargin = this.leftContainerHeight - 50;\n  }\n\n  public onResizeEnd(event: any) {\n    this.leftContainerWidth = this.leftContainerWidth + event.edges.right - 2;\n  }\n\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {ImageDetails} from '../classes/image-details';\n\n@Component({\n  selector: 'app-image-loading-form',\n  templateUrl: './image-loading-form.component.html',\n  styleUrls: ['./image-loading-form.component.css']\n})\nexport class ImageLoadingFormComponent implements OnInit, OnChanges {\n\n  public formatX = 16;\n  public formatY = 9;\n\n  @Output()\n  public imageChanged = new EventEmitter();\n\n  @Input()\n  public leftImage: ImageDetails;\n\n  @Input()\n  public rightImage: ImageDetails;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.imageChanged.emit();\n    this.saveFormat();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.imageChanged.emit();\n  }\n\n  public saveFormat() {\n    this.leftImage.format = this.formatX / this.formatY;\n    this.rightImage.format = this.formatX / this.formatY;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ImageComparerLibComponent } from './image-comparer-lib.component';\nimport {FormsModule} from '@angular/forms';\nimport {ImageCropperModule} from 'ngx-image-cropper';\nimport {ResizableDirective, ResizableModule} from 'angular-resizable-element';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {ImageCropperComponent} from './image-cropper/image-cropper.component';\nimport {ImageContainerPanelComponent} from './image-container-panel/image-container-panel.component';\nimport {ImageLoadingFormComponent} from './image-loading-form/image-loading-form.component';\nimport * as $ from 'jquery';\n\n@NgModule({\n  declarations: [\n    ImageComparerLibComponent,\n    ImageCropperComponent,\n    ImageContainerPanelComponent,\n    ImageLoadingFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    ResizableModule,\n    FormsModule,\n    ImageCropperModule\n  ],\n  providers: [\n    ResizableDirective\n  ],\n  exports: [ImageComparerLibComponent]\n})\nexport class ImageComparerLibModule { }\n"],"names":["Injectable","Component","EventEmitter","ViewChild","Input","Output","NgModule","BrowserModule","ResizableModule","FormsModule","ImageCropperModule","ResizableDirective"],"mappings":"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"}
